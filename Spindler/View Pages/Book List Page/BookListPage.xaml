<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:util="clr-namespace:Spindler.Utilities"
             xmlns:viewmodels="clr-namespace:Spindler.ViewModels"
             xmlns:models="clr-namespace:Spindler.Models"
             xmlns:items="clr-namespace:Spindler.Views.CustomControls.Items"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             x:DataType="viewmodels:BookListViewModel"
             x:Class="Spindler.Views.BookListPage"
             x:Name="thisPage">

    <ContentPage.Resources>
        <toolkit:BoolToObjectConverter x:Key="ExpanderIconConverter" FalseObject="&#xF175;" TrueObject="&#xF176;"/>
        <Color x:Key="TrueColor">Transparent</Color>
        <Color x:Key="FalseColor">#55FFFFFF</Color>
        <toolkit:BoolToObjectConverter x:Key="BorderColorConverter" FalseObject="{StaticResource FalseColor}" TrueObject="{StaticResource TrueColor}"/>

        <DataTemplate x:Key="ListLayout" x:DataType="models:Book">
            <items:BookItem 
                        BookParameter="{Binding Path=., Mode=OneTime}"
                        SelectionCommand="{Binding Source={x:RelativeSource AncestorType={x:Type viewmodels:BookListViewModel}}, Path=SelectionCommand, Mode=OneTime}"
                        DoubleTappedCommand="{Binding Source={x:RelativeSource AncestorType={x:Type viewmodels:BookListViewModel}}, Path=DoubleTappedCommand, Mode=OneTime}"/>
        </DataTemplate>
        <LinearItemsLayout x:Key="ListItemsLayout" ItemSpacing="5" Orientation="Vertical"/>
        
        <DataTemplate x:Key="GridLayout" x:DataType="models:Book">
            <Grid RowDefinitions="160,50"
                  HeightRequest="210"
                  WidthRequest="120"
                  CompressedLayout.IsHeadless="True">
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer NumberOfTapsRequired="1" 
                                          Command="{Binding Source={x:RelativeSource AncestorType={x:Type viewmodels:BookListViewModel}}, Path=SelectionCommand, Mode=OneTime}"
                                          CommandParameter="{Binding Path=., Mode=OneTime}"/>
                    <TapGestureRecognizer NumberOfTapsRequired="2"
                                          Command="{Binding Source={x:RelativeSource AncestorType={x:Type viewmodels:BookListViewModel}}, Path=DoubleTappedCommand, Mode=OneTime}"
                                          CommandParameter="{Binding Path=., Mode=OneTime}"/>
                </Grid.GestureRecognizers>
                <Border Grid.ColumnSpan="2"
                        WidthRequest="100"
                        HeightRequest="150"
                        StrokeShape="RoundRectangle 3,3,3,3"
                        Stroke="{Binding Path=HasImageUrl, Mode=OneTime, Converter={StaticResource BorderColorConverter}}"
                        CompressedLayout.IsHeadless="True"
                        >
                    <Grid>
                        <Image Source="{Binding Path=ImageUrl, Mode=OneTime, TargetNullValue=spindler_icon.svg}" 
                           Aspect="AspectFill">
                            <Image.Shadow>
                                <Shadow Offset="15,10" Brush="Black" Opacity="0.8"/>
                            </Image.Shadow>
                        </Image>
                        <Path Fill="{DynamicResource Warning}"
                              Data="M 0 0 L 12, 0 L 12, 20 L 6, 14 L 0, 20 Z"
                              HeightRequest="20"
                              WidthRequest="13"
                              HorizontalOptions="Start"
                              VerticalOptions="Start"
                              Margin="10,-2,0,0"
                              IsVisible="{Binding Path=HasNextChapter, Mode=OneWay}"/>
                    </Grid>
                </Border>
                
                
                <Label Grid.Row="1"
                       Text="{Binding Title}"
                       FontSize="13"
                       FontAutoScalingEnabled="False"
                       Margin="12,0,10,0"
                       MaxLines="3"/>
            </Grid>
        </DataTemplate>
        <GridItemsLayout x:Key="GridItemsLayout" Orientation="Vertical" Span="3"/>
    </ContentPage.Resources>


    <Shell.TitleView>
        <Grid  ColumnDefinitions="*, auto" CompressedLayout.IsHeadless="True">

            <Entry Placeholder="{Binding Title}"
                   Text="{Binding FilterText}"
                   Grid.Column="0"
                   FontSize="Medium"
                   VerticalOptions="Center"
                   HorizontalOptions="FillAndExpand"
                   FontAutoScalingEnabled="False"
                   FontFamily="OpenSans (Semibold)"
                   Margin="0,0,30,0"
                   TextColor="{DynamicResource TextColor}"/>
            <Label x:Name="AddToolBarItem"
                    Grid.Column="1" 
                    TextColor="{DynamicResource Primary}"
                    FontFamily="SPIcon"
                    Text="&#xE805;"
                    Margin="0,0,15,0"
                    VerticalOptions="Center"
                    FontAutoScalingEnabled="False"
                    FontSize="27">
                <Label.Behaviors>
                    <toolkit:AnimationBehavior Command="{Binding AddToolBarItemCommand, Mode=OneWay}">
                        <toolkit:AnimationBehavior.AnimationType>
                            <util:RotationAnimation/>
                        </toolkit:AnimationBehavior.AnimationType>
                    </toolkit:AnimationBehavior>
                </Label.Behaviors>
            </Label>
        </Grid>
    </Shell.TitleView>
    <RefreshView IsRefreshing="{Binding IsLoading}" 
                     Command="{Binding LoadCommand}"
                     Margin="5">
        <!--Standard book list-->
        <CollectionView x:Name="BooksList"
                        ItemsSource="{Binding DisplayedBooks, Mode=OneTime}"
                        RemainingItemsThreshold="5"
                        RemainingItemsThresholdReachedCommand="{Binding EndOfListReachedCommand, Mode=OneTime}"
                        SelectionMode="Single"
                        VerticalScrollBarVisibility="Always">
            <CollectionView.Header>
                <!---Pinned Books-->
                <Border StrokeShape="RoundRectangle 10,10,10,10"
                        StrokeThickness="0"
                        Background="{DynamicResource CardBackground}"
                        Margin="5,0"
                        IsVisible="{Binding PinnedBooksAreVisible}"
                        CompressedLayout.IsHeadless="True">
                    <toolkit:Expander x:Name="PinView"
                              Padding="7,-1,8,5"
                              CompressedLayout.IsHeadless="True">
                        <toolkit:Expander.Header>
                            <Grid ColumnDefinitions="50, *, 25"
                                      Padding="0,7,0,0"
                                      CompressedLayout.IsHeadless="True"
                                      VerticalOptions="Center"
                                      BackgroundColor="{DynamicResource CardBackground}">
                                <Label  TextColor="{DynamicResource TextColor}"
                                        FontFamily="SPIcon"
                                        FontSize="Medium"
                                        VerticalOptions="Center"
                                        Text="&#xE804;"
                                        Padding="6,0,0,0"
                                        FontAutoScalingEnabled="False"/>

                                <Label Text="Pinned Books"
                                        Grid.Column="1"
                                        Padding="10, -2, 0, 0"
                                        FontSize="Large"
                                        FontFamily="OpenSans (Semibold)"
                                       FontAutoScalingEnabled="False"/>
                                <Label Text="{Binding Source={x:Reference PinView}, Path=IsExpanded, Converter={StaticResource ExpanderIconConverter}, Mode=OneWay}"
                                       Grid.Column="2"
                                       FontSize="Medium"
                                       VerticalOptions="Center"
                                       FontFamily="SPIcon"
                                       Margin="0,0,-10,0"
                                       FontAutoScalingEnabled="False"
                                       />
                            </Grid>
                        </toolkit:Expander.Header>
                        <CollectionView x:Name="PinnedBooksList"
                                        ItemsSource="{Binding PinnedBooks, Mode=OneTime}"
                                        SelectionMode="Single"
                                        Margin="0,5">
                            <CollectionView.ItemsLayout>
                                <LinearItemsLayout Orientation="Horizontal"
                                                   ItemSpacing="5"
                                                   SnapPointsAlignment="Center"
                                                   SnapPointsType="Mandatory"/>
                            </CollectionView.ItemsLayout>
                            <CollectionView.ItemTemplate>
                                <DataTemplate x:DataType="models:Book">
                                    <items:PinnedBookItem 
                                        BookParameter="{Binding Path=.}"
                                        SelectionCommand="{Binding Source={x:RelativeSource AncestorType={x:Type viewmodels:BookListViewModel}}, Path=SelectionCommand, Mode=OneTime}"
                                        DoubleTappedCommand="{Binding Source={x:RelativeSource AncestorType={x:Type viewmodels:BookListViewModel}}, Path=DoubleTappedCommand, Mode=OneTime}" />
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>
                    </toolkit:Expander>
                </Border>
            </CollectionView.Header>
            <CollectionView.ItemsLayout>
                <LinearItemsLayout ItemSpacing="5" Orientation="Vertical"/>
            </CollectionView.ItemsLayout>
            <CollectionView.Footer>
                <ActivityIndicator 
                    IsRunning="{Binding IsExpanding, Mode=OneWay}"
                    HeightRequest="{Binding LoaderHeightRequest, Mode=OneWay}"
                    Color="{StaticResource Primary}"/>
            </CollectionView.Footer>
        </CollectionView>
    </RefreshView>
</ContentPage>
