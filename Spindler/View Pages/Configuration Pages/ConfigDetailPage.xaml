<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:models="clr-namespace:Spindler.Models;assembly=Spindler.Core"
             xmlns:controls="clr-namespace:Spindler.CustomControls"
             xmlns:vm="clr-namespace:Spindler.ViewModels"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:table="clr-namespace:Spindler.Views.TableReplacements"
             x:Class="Spindler.ConfigDetailPage"
             x:DataType="vm:ConfigDetailViewModel"
             Shell.PresentationMode="ModalAnimated"
             Title="ConfigDetailPage">

    <ContentPage.Resources>
        <Style x:Key="validStyle" TargetType="Label">
            <Setter Property="TextColor" Value="{x:StaticResource TextColor}"/>
        </Style>

        <Style x:Key="invalidStyle" TargetType="Label">
            <Setter Property="TextColor" Value="{x:StaticResource Warning}"/>
        </Style>
    </ContentPage.Resources>

    <Grid RowDefinitions="auto, *, auto" VerticalOptions="FillAndExpand">
        <Grid x:Name="CoreInformation" RowDefinitions="auto, 40, 40, 40, 40" ColumnDefinitions="auto, *" Padding="9,0,9,0">

            <Grid x:Name="SpecializedConfigInfo" RowDefinitions="40" ColumnDefinitions="auto, *" IsVisible="false" Grid.ColumnSpan="2">
                <Label Text="Domain:" VerticalOptions="Center"/>

                <Entry x:Name="domainEntry" HorizontalOptions="FillAndExpand" Grid.Column="1" 
                       Placeholder="Domain name of the website ex: google.com" Text="{Binding Config.DomainName}">
                    <Entry.Behaviors>
                        <toolkit:TextValidationBehavior 
                             ValidStyle="{x:StaticResource validStyle}"
                             InvalidStyle="{x:StaticResource invalidStyle}"
                             Flags="ValidateOnValueChanged"
                             RegexPattern="^(?!www\\.)(((?!\\-))(xn\\-\\-)?[a-z0-9\\-_]{0,61}[a-z0-9]{1,1}\\.)*(xn\\-\\-)?([a-z0-9\\-]{1,61}|[a-z0-9\\-]{1,30})\\.[a-z]{2,}$"/>
                    </Entry.Behaviors>
                </Entry>
            </Grid>

            <Grid x:Name="GeneralizedConfigInfo" RowDefinitions="40,40" ColumnDefinitions="auto, *" IsVisible="false" Grid.ColumnSpan="2">
                <Label Text="Config Name:" VerticalOptions="Center"/>
                <Entry x:Name="nameEntry" HorizontalOptions="FillAndExpand" Grid.Column="1"
               Placeholder="Name of the config" Text="{Binding Config.DomainName}"/>

                <Label Text="Match Path:" VerticalOptions="Center" Grid.Row="1"/>
                <Entry x:Name="matchEntry" HorizontalOptions="FillAndExpand" Grid.Column="1" Grid.Row="1" IsSpellCheckEnabled="False"
               Placeholder="Match path of the configuration" Text="{Binding MatchPath}"/>
            </Grid>



            <Label Text="Title Path:" VerticalOptions="Center" Grid.Row="1"/>
            <Entry x:Name="titleEntry" HorizontalOptions="FillAndExpand" Grid.Row="1" Grid.Column="1" IsSpellCheckEnabled="False"
                               Placeholder="[Optional] Path pointing to the title element" Text="{Binding Config.TitlePath}"/>

            <Label Text="Content Path:" VerticalOptions="Center" Grid.Row="2"/>
            <Entry x:Name="contentEntry" HorizontalOptions="FillAndExpand" Grid.Row="2" Grid.Column="1" IsSpellCheckEnabled="False"
                               Placeholder="Path pointing to the content of the page" Text="{Binding Config.ContentPath}"/>

            <Label Text="Previous Path:" VerticalOptions="Center" Grid.Row="3"/>
            <Entry x:Name="prevEntry" HorizontalOptions="FillAndExpand" Grid.Row="3" Grid.Column="1" IsSpellCheckEnabled="False"
                            Placeholder="Path pointing to the previous url" Text="{Binding Config.PrevUrlPath}"/>

            <Label Text="Next Path:" VerticalOptions="Center" Grid.Row="4"/>
            <Entry x:Name="nextEntry" HorizontalOptions="FillAndExpand" Grid.Row="4" Grid.Column="1" IsSpellCheckEnabled="False"
                            Placeholder="Path pointing to the next url" Text="{Binding Config.NextUrlPath}"/>
        </Grid>
        <ScrollView Grid.Row="1" VerticalOptions="StartAndExpand">
            <Grid RowDefinitions="auto, auto, auto, auto" CompressedLayout.IsHeadless="True" Margin="0, 30">
                <VerticalStackLayout CompressedLayout.IsHeadless="True">
                    <Label Text="Extra Configuration Options" TextColor="{StaticResource Primary}"/>
                    <table:TableInput Label="Image Url Path" Text="{Binding Config.ImageUrlPath}"/>
                    <Picker x:Name="ContentTypeSelector" Title="Content Extraction Strategy" ItemsSource="{Binding PossibleExtractors}" SelectedItem="{Binding Config.ContentType}"/>
                </VerticalStackLayout>

                <VerticalStackLayout CompressedLayout.IsHeadless="True" Grid.Row="1">
                    <Label Text="Web View" TextColor="{StaticResource Primary}"/>
                    <table:LabelSwitch x:Name="switchWebView" Text="Use Web View for Viewing this website" On="{Binding Config.UsesWebview}"/>
                </VerticalStackLayout>

                <VerticalStackLayout CompressedLayout.IsHeadless="True" Grid.Row="2">
                    <Label Text="Reader View" TextColor="{StaticResource Primary}"/>
                    <table:TableInput x:Name="separatorEntry" Label="The Separator between P tags" Text="{Binding SeparatorText}"/>
                    <table:LabelSwitch x:Name="animationSwitch" Text="Animated Autoscroll" On="{Binding Config.HasAutoscrollAnimation}"/>
                    <table:LabelSwitch x:Name="headlessSwitch" Text="Enable headless mode (increased compatability, decreased performance)" On="{Binding Config.UsesHeadless}"/>
                    <table:LabelSwitch x:Name="filterSwitch" Text="Filter out certain types of text" On="{Binding Config.FilteringContentEnabled}"/>
                </VerticalStackLayout>

                <VerticalStackLayout CompressedLayout.IsHeadless="True" Grid.Row="3" Spacing="5">
                    <Label Text="Import Options" TextColor="{StaticResource Primary}"/>
                    <Button x:Name="exportButton" Text="Export Config as JSON" IsEnabled="False" Command="{Binding ExportCommand}" BackgroundColor="{StaticResource Warning}" CornerRadius="0" Padding="0,5"/>
                    <Button x:Name="importButton" Text="Import Config from JSON file" IsEnabled="False" Command="{Binding ImportCommand}" BackgroundColor="{StaticResource Warning}" CornerRadius="0" Padding="0,5"/>
                </VerticalStackLayout>
            </Grid>
        </ScrollView>

        <controls:AddButtonGroup x:Name="AddButtonGroup"
                                 Grid.Row="2"
                                 DeleteCommand="{Binding DeleteCommand}"
                                 CancelCommand="{Binding BackCommand}"
                                 OkCommand="{Binding AddCommand}"
                                 HorizontalOptions="FillAndExpand"/>

    </Grid>
</ContentPage>
